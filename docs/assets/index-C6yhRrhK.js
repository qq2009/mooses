import{r as v,p as $,o as y,A as _,w as V,d as S,e as s,a8 as q,C as g,a9 as b,aa as A,ab as U,ac as C,ad as O,c as w,F,b as h,ae as R,af as I,ag as L,ah as K,ai as N,aj as P,ak as B,al as M,am as T,an as j,h as D,t as G,ao as z,ap as H,aq as J,ar as Q,m as W,as as X,s as Y,B as Z,v as x,at as ee}from"./index-By6WQf-7.js";const te={__name:"m-input",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e=n.value){l("update",{[c]:e})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(q),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},ae={__name:"m-input-number",props:{field:{type:String,required:!0},defaultValue:{type:Number,default:0}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e){l("update",{[c]:e||p})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(C),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},le={__name:"m-select",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""},options:{type:[Array,Function],default:()=>[]}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l}=m,n=f,a=v(p),e=v([]),u=async()=>{typeof l=="function"?e.value=await l():Array.isArray(l)?e.value=l:console.warn("MSelect Invalid options format")};$(a,t=>{r(t)});function r(t=a.value){n("update",{[c]:t})}return u(),r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(O),g({modelValue:a.value,"onUpdate:modelValue":o[0]||(o[0]=d=>a.value=d)},t.$attrs),{default:V(()=>[(y(!0),w(F,null,h(e.value,d=>(y(),_(s(R),{key:d.value,label:d.label,value:d.value},null,8,["label","value"]))),128))]),_:1},16,["modelValue"])]),_:1},16))}},ue={__name:"m-vselect",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""},options:{type:[Array,Function],default:()=>[]}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l}=m,n=f,a=v(p),e=v([]),u=async()=>{typeof l=="function"?e.value=await l():Array.isArray(l)?e.value=l:console.warn("MVselect Invalid options format")};$(a,t=>{r(t)});function r(t=a.value){n("update",{[c]:t})}return u(),r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(I),g({modelValue:a.value,"onUpdate:modelValue":o[0]||(o[0]=d=>a.value=d)},t.$attrs,{options:e.value}),null,16,["modelValue","options"])]),_:1},16))}},ne={__name:"m-time-picker",props:{field:{type:String,default:""},startField:{type:String,default:""},endField:{type:String,default:""},defaultValue:{type:[String,Array],default:""},isRange:{type:Boolean,default:!1}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,isRange:l,startField:n,endField:a}=m,e=f,u=v(p);$(u,t=>{r(t)});function r(t=u.value){l?e("update",{[n]:Array.isArray(t)?t[0]:"",[a]:Array.isArray(t)?t[1]:""}):e("update",{[c]:t||""})}return r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(L),g({modelValue:u.value,"onUpdate:modelValue":o[0]||(o[0]=d=>u.value=d)},t.$attrs,{isRange:s(l)}),null,16,["modelValue","isRange"])]),_:1},16))}},se={__name:"m-cascader",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""},options:{type:[Array,Function],default:()=>[]}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l}=m,n=f,a=v(p),e=v([]),u=async()=>{typeof l=="function"?e.value=await l():Array.isArray(l)?e.value=l:console.warn("MCascader Invalid options format")};$(a,t=>{r(t)});function r(t=a.value){n("update",{[c]:t})}return u(),r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(K),g({modelValue:a.value,"onUpdate:modelValue":o[0]||(o[0]=d=>a.value=d)},t.$attrs,{options:e.value}),null,16,["modelValue","options"])]),_:1},16))}},re={__name:"m-tree-select",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""},options:{type:[Array,Function],default:()=>[]}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l}=m,n=f,a=v(p),e=v([]),u=async()=>{typeof l=="function"?e.value=await l():Array.isArray(l)?e.value=l:console.warn("MTreeSelect Invalid options format")};$(a,t=>{r(t)});function r(t=a.value){n("update",{[c]:t})}return u(),r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(N),g({modelValue:a.value,"onUpdate:modelValue":o[0]||(o[0]=d=>a.value=d)},t.$attrs,{data:e.value}),null,16,["modelValue","data"])]),_:1},16))}},oe={__name:"m-time-select",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e=n.value){l("update",{[c]:e||p})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(P),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},de={__name:"m-switch",props:{field:{type:String,required:!0},defaultValue:{type:[String,Boolean],default:!1}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e=n.value){l("update",{[c]:e})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(B),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},ie={__name:"m-slider",props:{field:{type:String,required:!0},defaultValue:{type:[Number,Object],default:0}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e=n.value){l("update",{[c]:e})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(M),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},pe={__name:"m-radio",props:{field:{type:String,required:!0},defaultValue:{type:[String,Number],default:""},options:{type:[Array,Function],default:()=>[]},labelKey:{type:String,default:"label"},valueKey:{type:String,default:"value"}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l,labelKey:n,valueKey:a}=m,e=f,u=v(p),r=v([]),t=async()=>{typeof l=="function"?r.value=await l():Array.isArray(l)?r.value=l:console.warn("MRadio Invalid options format")};$(u,d=>{o(d)});function o(d=u.value){e("update",{[c]:d})}return t(),o(),(d,k)=>(y(),_(s(U),b(A(d.$attrs)),{default:V(()=>[S(s(T),g({modelValue:u.value,"onUpdate:modelValue":k[0]||(k[0]=E=>u.value=E)},d.$attrs),{default:V(()=>[(y(!0),w(F,null,h(r.value,E=>(y(),_(s(j),{key:E[s(a)],value:E[s(a)]},{default:V(()=>[D(G(E[s(n)]),1)]),_:2},1032,["value"]))),128))]),_:1},16,["modelValue"])]),_:1},16))}},fe={__name:"m-date-picker",props:{field:{type:String,default:""},t:{type:String,default:"date"},startField:{type:String,default:""},endField:{type:String,default:""},defaultValue:{type:[String,Array],default:""}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,startField:l,endField:n,t:a}=m,e=f,u=v(p);$(u,t=>{r(t)});function r(t=u.value){["monthrange","yearrange","daterange","datetimerange"].includes(a)?e("update",{[l]:Array.isArray(t)?t[0]:"",[n]:Array.isArray(t)?t[1]:""}):e("update",{[c]:t||""})}return r(),(t,o)=>(y(),_(s(U),b(A(t.$attrs)),{default:V(()=>[S(s(z),g({modelValue:u.value,"onUpdate:modelValue":o[0]||(o[0]=d=>u.value=d)},t.$attrs,{type:s(a)}),null,16,["modelValue","type"])]),_:1},16))}},me={__name:"m-color-picker",props:{field:{type:String,required:!0},defaultValue:{type:String,default:""}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p}=m,l=f,n=v(p);$(n,e=>{a(e)});function a(e){l("update",{[c]:e||p})}return a(),(e,u)=>(y(),_(s(U),b(A(e.$attrs)),{default:V(()=>[S(s(H),g({modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=r=>n.value=r)},e.$attrs),null,16,["modelValue"])]),_:1},16))}},ce={__name:"m-checkbox",props:{field:{type:String,required:!0},defaultValue:{type:[Array],default:()=>[]},options:{type:[Array,Function],default:()=>[]},labelKey:{type:String,default:"label"},valueKey:{type:String,default:"value"}},emits:["update"],setup(i,{emit:f}){const m=i,{field:c,defaultValue:p,options:l,labelKey:n,valueKey:a}=m,e=f,u=v(p),r=v([]),t=async()=>{typeof l=="function"?r.value=await l():Array.isArray(l)?r.value=l:console.warn("MCheckbox Invalid options format")};$(u,d=>{o(d)});function o(d=u.value){e("update",{[c]:d})}return t(),o(),(d,k)=>(y(),_(s(U),b(A(d.$attrs)),{default:V(()=>[S(s(J),g({modelValue:u.value,"onUpdate:modelValue":k[0]||(k[0]=E=>u.value=E)},d.$attrs),{default:V(()=>[(y(!0),w(F,null,h(r.value,E=>(y(),_(s(Q),{key:E[s(a)],label:E[s(a)],value:E[s(a)]},null,8,["label","value"]))),128))]),_:1},16,["modelValue"])]),_:1},16))}},ye={input:te,"input-number":ae,select:le,"select-v2":ue,"time-picker":ne,cascader:se,"tree-select":re,"time-select":oe,switch:de,slider:ie,radio:pe,"date-picker":fe,"color-picker":me,checkbox:ce},Ve={__name:"index",props:{options:{type:Array,required:!0},backfill:{type:Object,default:()=>({})},gutter:{type:Number,default:20},span:{type:Number,default:24}},setup(i,{expose:f}){const m=i,{options:c,span:p}=m,l=v(null),n=v({}),a=W(()=>c||[]),e=o=>ye[o]||"div",u=o=>o.span||p,r=o=>{Object.keys(o).forEach(d=>{n.value[d]=o[d]})};function t(){return new Promise((o,d)=>{l.value.validate(k=>{o(k?n.value:!1)})})}return f({validate:t}),(o,d)=>(y(),_(s(ee),g({class:"moose-form",model:n.value,ref_key:"formRef",ref:l},o.$attrs),{default:V(()=>[S(s(X),{gutter:i.gutter},{default:V(()=>[(y(!0),w(F,null,h(a.value,k=>(y(),_(s(Y),{key:k.name,span:u(k)},{default:V(()=>[(y(),_(Z(e(k.type)),g({class:"moose-form__item",ref_for:!0},k,{onUpdate:r}),null,16))]),_:2},1032,["span"]))),128)),x(o.$slots,"handle")]),_:3},8,["gutter"])]),_:3},16,["model"]))}};function _e(i){return i}export{Ve as _,_e as d};

const f="*";class u{constructor(){this._events={},this._maxListeners=1/0,this._paused=!1,this._loggingEnabled=!1,this._errorHandler=null}setMaxListeners(e){this._maxListeners=e}enableLogging(){this._loggingEnabled=!0}disableLogging(){this._loggingEnabled=!1}on(e,s,{once:i=!1,priority:n=0,times:o=1/0}={}){return e.split(",").forEach(t=>{t=t.trim(),this._events[t]||(this._events[t]=[]),this._events[t].length>=this._maxListeners&&console.warn(`Max listeners exceeded for event: ${t}`),this._events[t].push({callback:s,once:i,priority:n,times:o}),this._events[t].sort((r,h)=>h.priority-r.priority)}),this}once(e,s){return this.on(e,s,{once:!0})}async emit(e,...s){this._paused||e.split(",").forEach(i=>{const n=this._events[i]||[],o=this._events[f]||[],t=async r=>{let h=r.length;for(let l=0;l<h;l++){if(!r[l])continue;const{callback:a,once:_,times:d}=r[l];try{await Promise.resolve(a.apply(this,s))}catch(c){this._errorHandler&&this._errorHandler(c)}r[l].times--,(_||r[l].times<=0)&&(r.splice(l,1),h--,l--)}};t(n),t(o),this._loggingEnabled&&console.log(`Event emitted: ${i}`,s)})}listeners(e){return this._events[e]||[]}getEvents(){return this._events}off(e,s){return e?(e.split(",").forEach(i=>{if(!s)delete this._events[i];else{const n=this._events[i]||[];let o=n.length;for(let t=0;t<o;t++)n[t].callback===s&&(n.splice(t,1),o--,t--);n.length===0&&delete this._events[i]}}),this):(this._events={},this)}pause(){this._paused=!0}resume(){this._paused=!1}onError(e){this._errorHandler=e}}export{u as E};
